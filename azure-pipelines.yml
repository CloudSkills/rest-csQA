# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  vmImageName: 'vs2017-win2016'
  azureSubscription: 'c0916c23-1eeb-4623-a719-4ec0343d791c'
  resourceGroupName: 'csQADevOps'
  resourceGroupLocation: 'West Europe'
  apiManagementName: 'csDevOps'
  questionsFunctionAppName: ''

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Or Update Resource Group action on $(resourceGroupName)'
      inputs:
        azureSubscription: $(azureSubscription)'
        resourceGroupName: '$(resourceGroupName)'
        location: '$(resourceGroupLocation)'
        csmFile: '$(System.DefaultWorkingDirectory)/_csQA-Azure Functions for .NET-CI/arm/azuredeploy.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/_csQA-Azure Functions for .NET-CI/arm/azuredeploy.parameters.json'
        deploymentName: 'csQA-ARM'
        deploymentOutputs: deploymentOutputs
    - task: PowerShell@2
      displayName: 'Parse ARM Deployment outputs'
      inputs:
        targetType: filePath
        filePath: './$(System.DefaultWorkingDirectory)/_csQA-Azure Functions for .NET-CI/scripts/parse_arm_deployment_output.ps1'
        arguments: '-ArmOutputString ''$(deploymentOutputs)'' -ErrorAction Stop'

    - task: CopyFiles@2
      displayName: 'Copy Files to: ARM'
      inputs:
        SourceFolder: IaC/functionapp
        Contents: '*.json'
        TargetFolder: '$(build.artifactstagingdirectory)/arm'
        CleanTargetFolder: true

    - task: CopyFiles@2
      displayName: 'Copy Files to: Scripts'
      inputs:
        SourceFolder: Scripts
        Contents: '*.ps1'
        TargetFolder: '$(build.artifactstagingdirectory)/scripts'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: src'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/src'
        ArtifactName: src

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: arm'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/arm'
        ArtifactName: arm

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: scripts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/scripts'
        ArtifactName: scripts

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureResourceGroupDeployment@2
            displayName: 'Azure Deployment on $(resourceGroupName)'
            inputs:
              azureSubscription: '$(azureSubscription)'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(resourceGroupLocation)'
              csmFile: '$(Build.ArtifactStagingDirectory)/arm/azuredeploy.json'
              csmParametersFile: $(Build.ArtifactStagingDirectory)/arm/azuredeploy.parameters.json'
              deploymentName: 'csQA-ARM'
              deploymentOutputs: deploymentOutputs
          - task: PowerShell@2
            displayName: 'Parse ARM Deployment outputs'
            inputs:
              targetType: filePath
              filePath: '$(Build.ArtifactStagingDirectory)/scripts/parse_arm_deployment_output.ps1'
              arguments: '-ArmOutputString ''$(deploymentOutputs)'' -ErrorAction Stop'
          - task: AzureFunctionApp@1
            displayName: 'Azure Function App Deploy: $(questionsFunctionAppName)'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: '$(questionsFunctionAppName)'
              package: '$(Build.ArtifactStagingDirectory)/arm/**/*.zip'
              deploymentMethod: zipDeploy